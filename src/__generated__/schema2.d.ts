/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/post/v2": {
    /** 모임 게시글 목록 조회 */
    get: operations["getPosts"];
    /** 모임 게시글 작성 */
    post: operations["createPost"];
  };
  "/post/v2/mention": {
    /** 게시글에서 멘션하기 */
    post: operations["mentionUserInPost"];
  };
  "/notice/v2": {
    /** 공지사항 조회 */
    get: operations["getNotices"];
    /** 공지사항 작성 */
    post: operations["createNotice"];
  };
  "/meeting/v2": {
    /** 모임 생성 */
    post: operations["createMeeting"];
  };
  "/meeting/v2/apply": {
    /** 모임 지원 */
    post: operations["applyMeeting"];
  };
  "/comment/v2": {
    /** 모임 게시글 댓글 작성 */
    post: operations["createComment"];
  };
  "/comment/v2/{commentId}/report": {
    /** 댓글 신고하기 */
    post: operations["reportComment"];
  };
  "/comment/v2/mention": {
    /** 댓글에서 유저 멘션 */
    post: operations["mentionUserInComment"];
  };
  "/user/v2/mention": {
    /** 멘션 사용자 조회 */
    get: operations["getAllMentionUser"];
  };
  "/user/v2/meeting/all": {
    /** 내가 속한 모임 조회 */
    get: operations["getAllMeetingByUser"];
  };
  "/meeting/v2/{meetingId}/list": {
    /**
     * 모임 지원자/참여자 조회
     * @description 모임 지원자/참여자 조회 (모임장이면 지원자, 아니면 참여자 조회)
     */
    get: operations["findApplyList"];
  };
  "/meeting/v2/org-user": {
    /** 플레이그라운드 마이페이지 내 모임 정보 조회 */
    get: operations["getAllMeetingByOrgUser"];
  };
  "/meeting/v2/banner": {
    /** 모임 둘러보기 조회 */
    get: operations["getMeetingBanner"];
  };
  "/health": {
    get: operations["getHealth"];
  };
  "/health/v2": {
    get: operations["getHealthV2"];
  };
  "/meeting/v2/{meetingId}/apply": {
    /** 모임 지원 취소 */
    delete: operations["applyMeetingCancel"];
  };
  "/comment/v2/{commentId}": {
    /** 모임 게시글 댓글 삭제 */
    delete: operations["deleteComment"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description 게시물 생성 request body dto */
    PostV2CreatePostBodyDto: {
      /**
       * Format: int32
       * @description 모임 ID
       * @example 1
       */
      meetingId: number;
      /**
       * @description 모임 제목
       * @example 알고보면 쓸데있는 개발 프로세스
       */
      title: string;
      /**
       * @description 게시글 이미지 리스트
       * @example [
       *   "https://makers-web-img.s3.ap-northeast-2.amazonaws.com/meeting/2023/04/12/7bd87736-b557-4b26-a0d5-9b09f1f1d7df"
       * ]
       */
      images: string[];
      /**
       * @description 게시글 내용
       * @example api 가 터졌다고? 깃이 터졌다고?
       */
      contents: string;
    };
    PostV2CreatePostResponseDto: {
      /** Format: int32 */
      postId?: number;
    };
    /** @description 모임 게시글에서 유저 언급 request body dto */
    PostV2MentionUserInPostRequestDto: {
      /**
       * @description 언급할 유저 ID
       * @example [
       *   111,
       *   112,
       *   113
       * ]
       */
      userIds: number[];
      /**
       * Format: int32
       * @description 게시글 ID
       * @example 1
       */
      postId: number;
      /**
       * @description 멘션 내용
       * @example 멘션내용~~
       */
      content: string;
    };
    NoticeV2CreateRequestDto: {
      title?: string;
      subTitle?: string;
      contents?: string;
      /** Format: date-time */
      exposeStartDate?: string;
      /** Format: date-time */
      exposeEndDate?: string;
      noticeSecretKey?: string;
    };
    /** @description 모임 생성 request body dto */
    MeetingV2CreateMeetingBodyDto: {
      /**
       * @description 모임 제목
       * @example 알고보면 쓸데있는 개발 프로세스
       */
      title: string;
      /**
       * @description 모임 이미지 리스트, 최대 6개
       * @example [
       *   "https://makers-web-img.s3.ap-northeast-2.amazonaws.com/meeting/2023/04/12/7bd87736-b557-4b26-a0d5-9b09f1f1d7df"
       * ]
       */
      files: string[];
      /**
       * @description 모임 카테고리
       * @example 스터디
       */
      category: string;
      /**
       * @description 모집 기간 시작 날짜
       * @example 2022.10.08
       */
      startDate: string;
      /**
       * @description 모집 기간 끝 날짜
       * @example 2022.10.09
       */
      endDate: string;
      /**
       * Format: int32
       * @description 모집 인원
       * @example 5
       */
      capacity: number;
      /**
       * @description 모집 정보
       * @example api 가 터졌다고? 깃이 터졌다고?
       */
      desc: string;
      /**
       * @description 진행 방식 소개
       * @example 소요 시간 : 1시간 예상
       */
      processDesc: string;
      /**
       * @description 모임 활동 시작 날짜
       * @example 2022.10.29
       */
      mStartDate: string;
      /**
       * @description 모임 활동 종료 날짜
       * @example 2022.10.30
       */
      mEndDate: string;
      /**
       * @description 개설자 소개
       * @example 안녕하세요 기획 파트 000입니다
       */
      leaderDesc: string;
      /**
       * @description 모집 대상 소개
       * @example 개발 모르는 사람도 환영
       */
      targetDesc: string;
      /**
       * @description 유의할 사항
       * @example 유의할 사항
       */
      note?: string;
      /**
       * @description 멘토 필요 여부
       * @example false
       */
      isMentorNeeded: boolean;
      /**
       * @description 활동기수만 지원 가능 여부
       * @example false
       */
      canJoinOnlyActiveGeneration: boolean;
      /**
       * @description 대상 파트 목록
       * @example [
       *   "ANDROID",
       *   "IOS"
       * ]
       */
      joinableParts: ("PM" | "DESIGN" | "IOS" | "ANDROID" | "SERVER" | "WEB")[];
    };
    MeetingV2CreateMeetingResponseDto: {
      /** Format: int32 */
      meetingId?: number;
    };
    /** @description 모임 지원 request body dto */
    MeetingV2ApplyMeetingDto: {
      /**
       * Format: int32
       * @description 모임 ID
       * @example 4
       */
      meetingId: number;
      /**
       * @description 지원 각오
       * @example 꼭 지원하고 싶습니다.
       */
      content: string;
    };
    MeetingV2ApplyMeetingResponseDto: {
      /** Format: int32 */
      applyId?: number;
    };
    /** @description 댓글 생성 request body dto */
    CommentV2CreateCommentBodyDto: {
      /**
       * Format: int32
       * @description 게시글 ID
       * @example 1
       */
      postId: number;
      /**
       * @description 댓글 내용
       * @example 알고보면 쓸데있는 개발 프로세스
       */
      contents: string;
    };
    CommentV2CreateCommentResponseDto: {
      /** Format: int32 */
      commentId?: number;
    };
    CommentV2ReportCommentResponseDto: {
      /** Format: int32 */
      reportId?: number;
    };
    /** @description 댓글에서 유저 언급 request body dto */
    CommentV2MentionUserInCommentRequestDto: {
      /**
       * @description 언급할 유저 ID
       * @example [
       *   111,
       *   112,
       *   113
       * ]
       */
      userIds: number[];
      /**
       * Format: int32
       * @description 게시글 ID
       * @example 1
       */
      postId: number;
      /**
       * @description 멘션 내용
       * @example 멘션내용~~
       */
      content: string;
    };
    UserV2GetAllMentionUserDto: {
      /** Format: int32 */
      userId?: number;
      userName?: string;
      recentPart?: string;
      /** Format: int32 */
      recentGeneration?: number;
      profileImageUrl?: string;
    };
    UserV2GetAllMeetingByUserMeetingDto: {
      /** Format: int32 */
      id?: number;
      title?: string;
      contents?: string;
      imageUrl?: string;
      category?: string;
    };
    PageMetaDto: {
      /**
       * Format: int32
       * @description 페이지 위치
       */
      page?: number;
      /**
       * Format: int32
       * @description 가져올 데이터 개수
       */
      take?: number;
      /**
       * Format: int32
       * @description 응답 데이터 개수
       */
      itemCount?: number;
      /**
       * Format: int32
       * @description 총 페이지 수
       */
      pageCount?: number;
      /** @description 이전 페이지가 있는지 유무 */
      hasPreviousPage?: boolean;
      /** @description 다음 페이지가 있는지 유무 */
      hasNextPage?: boolean;
    };
    PostDetailResponseDto: {
      /** Format: int32 */
      id?: number;
      title?: string;
      contents?: string;
      /** Format: date-time */
      createdDate?: string;
      images?: string[];
      user?: components["schemas"]["PostWriterInfoDto"];
      /** Format: int32 */
      likeCount?: number;
      isLiked?: boolean;
      /** Format: int32 */
      viewCount?: number;
      /** Format: int32 */
      commentCount?: number;
      meeting?: components["schemas"]["PostMeetingDto"];
      commenterThumbnails?: string[];
    };
    PostMeetingDto: {
      /** Format: int32 */
      id?: number;
      title?: string;
      category?: string;
    };
    PostV2GetPostsResponseDto: {
      posts?: components["schemas"]["PostDetailResponseDto"][];
      meta?: components["schemas"]["PageMetaDto"];
    };
    PostWriterInfoDto: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      orgId?: number;
      name?: string;
      profileImage?: string;
    };
    NoticeV2GetResponseDto: {
      /** Format: int32 */
      id?: number;
      title?: string;
      subTitle?: string;
      contents?: string;
      /** Format: date-time */
      createdDate?: string;
    };
    MeetingGetApplyListCommand: {
      /**
       * Format: int32
       * @description 각 페이지
       * @default 1
       * @example 1
       */
      page?: number;
      /**
       * Format: int32
       * @description 가져올 데이터 개수
       * @default 12
       * @example 12
       */
      take?: number;
      status?: ("WAITING" | "APPROVE" | "REJECT")[];
      date?: string;
    };
    ApplicantDto: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      orgId?: number;
      recentActivity?: components["schemas"]["UserActivityVO"];
      profileImage?: string;
      phone?: string;
    };
    ApplyInfoDto: {
      /** Format: int32 */
      id?: number;
      content?: string;
      /** Format: date-time */
      appliedDate?: string;
      /** @enum {string} */
      status?: "WAITING" | "APPROVE" | "REJECT";
      user?: components["schemas"]["ApplicantDto"];
    };
    MeetingGetApplyListResponseDto: {
      apply?: components["schemas"]["ApplyInfoDto"][];
      meta?: components["schemas"]["PageMetaDto"];
    };
    UserActivityVO: {
      part?: string;
      /** Format: int32 */
      generation?: number;
    };
    MeetingV2GetAllMeetingByOrgUserDto: {
      meetings?: components["schemas"]["MeetingV2GetAllMeetingByOrgUserMeetingDto"][];
      meta?: components["schemas"]["PageMetaDto"];
    };
    MeetingV2GetAllMeetingByOrgUserMeetingDto: {
      /** Format: int32 */
      id?: number;
      isMeetingLeader?: boolean;
      title?: string;
      imageUrl?: string;
      category?: string;
      isActiveMeeting?: boolean;
      /** Format: date-time */
      mstartDate?: string;
      /** Format: date-time */
      mendDate?: string;
    };
    ImageUrlVO: {
      /** Format: int32 */
      id?: number;
      url?: string;
    };
    MeetingV2GetMeetingBannerResponseDto: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      userId?: number;
      title?: string;
      /** @enum {string} */
      category?: "STUDY" | "LECTURE" | "LIGHTNING" | "EVENT" | "SEMINAR";
      imageURL?: components["schemas"]["ImageUrlVO"][];
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: int32 */
      capacity?: number;
      /** Format: date-time */
      recentActivityDate?: string;
      /** Format: int32 */
      targetActiveGeneration?: number;
      joinableParts?: ("PM" | "DESIGN" | "IOS" | "ANDROID" | "SERVER" | "WEB")[];
      /** Format: int32 */
      applicantCount?: number;
      /** Format: int32 */
      approvedUserCount?: number;
      user?: components["schemas"]["MeetingV2GetMeetingBannerResponseUserDto"];
      /** Format: int32 */
      status?: number;
      /** Format: date-time */
      mstartDate?: string;
      /** Format: date-time */
      mendDate?: string;
    };
    MeetingV2GetMeetingBannerResponseUserDto: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      orgId?: number;
      profileImage?: string;
    };
    HealthServiceGetHealthResponseDataDto: {
      status?: string;
      info?: components["schemas"]["HealthServiceGetHealthResponseDataInfoDto"];
      error?: components["schemas"]["HealthServiceGetHealthResponseDataInfoDto"];
      details?: components["schemas"]["HealthServiceGetHealthResponseDataInfoDto"];
    };
    /** @description services의 key는 EnHealthV1ServiceType, value는 서비스 상태 */
    HealthServiceGetHealthResponseDataInfoDto: {
      services?: {
        [key: string]: components["schemas"]["HealthServiceGetHealthResponseDataStatusDto"] | undefined;
      };
      database?: components["schemas"]["HealthServiceGetHealthResponseDataStatusDto"];
    };
    HealthServiceGetHealthResponseDataStatusDto: {
      status?: string;
    };
    HealthServiceGetHealthResponseDto: {
      /** Format: int32 */
      statusCode?: number;
      data?: components["schemas"]["HealthServiceGetHealthResponseDataDto"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** 모임 게시글 목록 조회 */
  getPosts: {
    parameters: {
      query?: {
        /**
         * @description 페이지, default = 1
         * @example 1
         */
        page?: number;
        /**
         * @description 가져올 데이터 개수, default = 12
         * @example 50
         */
        take?: number;
        /**
         * @description 모임 id
         * @example 0
         */
        meetingId?: number;
      };
    };
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["PostV2GetPostsResponseDto"];
        };
      };
      /** @description 모임이 없습니다. */
      400: never;
    };
  };
  /** 모임 게시글 작성 */
  createPost: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["PostV2CreatePostBodyDto"];
      };
    };
    responses: {
      /** @description 성공 */
      201: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["PostV2CreatePostResponseDto"];
        };
      };
      /** @description 모임이 없습니다. */
      400: never;
      /** @description 권한이 없습니다. */
      403: never;
    };
  };
  /** 게시글에서 멘션하기 */
  mentionUserInPost: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["PostV2MentionUserInPostRequestDto"];
      };
    };
    responses: {
      /** @description 성공 */
      200: never;
    };
  };
  /** 공지사항 조회 */
  getNotices: {
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["NoticeV2GetResponseDto"][];
        };
      };
    };
  };
  /** 공지사항 작성 */
  createNotice: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["NoticeV2CreateRequestDto"];
      };
    };
    responses: {
      /** @description 성공 */
      200: never;
    };
  };
  /** 모임 생성 */
  createMeeting: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["MeetingV2CreateMeetingBodyDto"];
      };
    };
    responses: {
      /** @description 성공 */
      201: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["MeetingV2CreateMeetingResponseDto"];
        };
      };
      /** @description "이미지 파일이 없습니다." or "한 개 이상의 파트를 입력해주세요" or "프로필을 입력해주세요" */
      400: never;
    };
  };
  /** 모임 지원 */
  applyMeeting: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["MeetingV2ApplyMeetingDto"];
      };
    };
    responses: {
      /** @description 지원 완료 */
      201: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["MeetingV2ApplyMeetingResponseDto"];
        };
      };
      /** @description "모임이 없습니다" or "기수/파트를 설정해주세요" or "정원이 꽉찼습니다" or "활동 기수가 아닙니다" or "지원 가능한 파트가 아닙니다" or "지원 가능한 기간이 아닙니다" */
      400: never;
    };
  };
  /** 모임 게시글 댓글 작성 */
  createComment: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["CommentV2CreateCommentBodyDto"];
      };
    };
    responses: {
      /** @description 성공 */
      201: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["CommentV2CreateCommentResponseDto"];
        };
      };
    };
  };
  /** 댓글 신고하기 */
  reportComment: {
    parameters: {
      path: {
        commentId: number;
      };
    };
    responses: {
      /** @description 성공 */
      201: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["CommentV2ReportCommentResponseDto"];
        };
      };
    };
  };
  /** 댓글에서 유저 멘션 */
  mentionUserInComment: {
    requestBody: {
      content: {
        "application/json;charset=UTF-8": components["schemas"]["CommentV2MentionUserInCommentRequestDto"];
      };
    };
    responses: {
      /** @description 성공 */
      200: never;
    };
  };
  /** 멘션 사용자 조회 */
  getAllMentionUser: {
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["UserV2GetAllMentionUserDto"][];
        };
      };
    };
  };
  /** 내가 속한 모임 조회 */
  getAllMeetingByUser: {
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["UserV2GetAllMeetingByUserMeetingDto"][];
        };
      };
      /** @description 내가 속한 모임 리스트가 없는 경우 */
      204: never;
    };
  };
  /**
   * 모임 지원자/참여자 조회
   * @description 모임 지원자/참여자 조회 (모임장이면 지원자, 아니면 참여자 조회)
   */
  findApplyList: {
    parameters: {
      query: {
        queryCommand: components["schemas"]["MeetingGetApplyListCommand"];
      };
      path: {
        meetingId: number;
      };
    };
    responses: {
      /** @description 모임 지원자/참여자 조회 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["MeetingGetApplyListResponseDto"];
        };
      };
      /** @description 모임이 없습니다. */
      400: never;
    };
  };
  /** 플레이그라운드 마이페이지 내 모임 정보 조회 */
  getAllMeetingByOrgUser: {
    parameters: {
      query?: {
        /**
         * @description 페이지, default = 1
         * @example 1
         */
        page?: string;
        /**
         * @description 가져올 데이터 개수, default = 12
         * @example 50
         */
        take?: string;
        /**
         * @description 플레이그라운드 유저 id
         * @example 0
         */
        orgUserId?: string;
      };
    };
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["MeetingV2GetAllMeetingByOrgUserDto"];
        };
      };
    };
  };
  /** 모임 둘러보기 조회 */
  getMeetingBanner: {
    responses: {
      /** @description 성공 */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["MeetingV2GetMeetingBannerResponseDto"][];
        };
      };
      /** @description 모임이 없습니다. */
      204: never;
    };
  };
  getHealth: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["HealthServiceGetHealthResponseDto"];
        };
      };
    };
  };
  getHealthV2: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": string;
        };
      };
    };
  };
  /** 모임 지원 취소 */
  applyMeetingCancel: {
    parameters: {
      path: {
        meetingId: number;
      };
    };
    responses: {
      /** @description 지원 취소 완료 */
      200: never;
      /** @description 존재하지 않는 모임 신청입니다. */
      400: never;
    };
  };
  /** 모임 게시글 댓글 삭제 */
  deleteComment: {
    parameters: {
      path: {
        commentId: number;
      };
    };
    responses: {
      /** @description 성공 */
      204: never;
    };
  };
}
